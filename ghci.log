GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-05-19 15:44:07.723071451
>>> clear

<interactive>:1:1: error: Variable not in scope: clear
2022-05-19 15:51:37.657031109
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-05-19 15:52:49.01582328
>>> 25+2
27
2022-05-19 15:54:24.960387589
>>> 3+2*5
13
2022-05-19 15:55:01.916459706
>>> 5-4-8
-7
2022-05-19 15:55:39.858120434
>>> sqrt 2
1.4142135623730951
2022-05-19 15:59:51.218052715
>>> double 3

<interactive>:5:1: error: Variable not in scope: double :: t0 -> t
2022-05-19 16:02:12.105027436
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-05-26 15:03:23.290337254
>>> maxBound :: Int
9223372036854775807
2022-05-26 15:03:51.110739151
>>> 2 ^ 63 -1
9223372036854775807
2022-05-26 15:05:08.325723607
>>> minBound :: Int
-9223372036854775808
2022-05-26 15:05:30.060557969
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
Ok, no modules loaded.
2022-05-26 15:49:07.268868685
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-05-26 15:49:07.332228205
>>> :e
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
Ok, one module loaded.
2022-05-26 15:55:59.807406866
>>> double 123
246
2022-05-26 15:56:24.773044666
>>> double (1+2)
6
2022-05-26 15:57:31.42511895
>>> :q
Leaving GHCi.
GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-06-09 14:54:51.614354
>>> 2 + 3 * 4
14
2022-06-09 14:57:48.983397744
>>> (2+3)*4
20
2022-06-09 15:01:57.405805346
>>> i sqrt

<interactive>:3:1: error:
    Variable not in scope: i :: (a0 -> a0) -> t
2022-06-09 15:02:12.21041484
>>> sqrt (3^2+4^2)
5.0
2022-06-09 15:03:28.946222141
>>> sqrt (25::Int)

<interactive>:5:1: error:
    • No instance for (Floating Int) arising from a use of ‘sqrt’
    • In the expression: sqrt (25 :: Int)
      In an equation for ‘it’: it = sqrt (25 :: Int)
2022-06-09 15:08:05.593153422
>>> sqrt(25::double)

<interactive>:6:6: error:
    • Could not deduce (Num double) arising from the literal ‘25’
      from the context: Floating a
        bound by the inferred type of it :: Floating a => a
        at <interactive>:6:1-16
      Possible fix:
        add (Num double) to the context of
          an expression type signature:
            forall double. double
    • In the first argument of ‘sqrt’, namely ‘(25 :: double)’
      In the expression: sqrt (25 :: double)
      In an equation for ‘it’: it = sqrt (25 :: double)
2022-06-09 15:09:24.127592857
>>> sqrt (25::Double)
5.0
2022-06-09 15:09:58.260603153
>>> sqrt25

<interactive>:8:1: error:
    • Variable not in scope: sqrt25
    • Perhaps you meant ‘sqrt’ (imported from Prelude)
2022-06-09 15:10:08.010954835
>>> sqrt 25
5.0
2022-06-09 15:10:20.186877795
>>> head [3,1,4,1,5]
3
2022-06-09 15:46:56.401472157
>>> hoge = [3,1,4,1,5] :: [Int]
2022-06-09 15:50:34.264849593
>>> head hoge
3
2022-06-09 15:51:25.900940108
>>> tail hoge
[1,4,1,5]
2022-06-09 15:51:35.378897919
>>> tail []
*** Exception: Prelude.tail: empty list
2022-06-09 15:52:36.128445921
>>> hoge !! 0
3
2022-06-09 15:55:07.154756874
>>> hoge !! 2
4
2022-06-09 15:55:20.852448953
>>> take 3 hoge
[3,1,4]
2022-06-09 15:56:27.028154008
>>> drop 3 hoge
[1,5]
2022-06-09 15:57:28.854824528
>>> take 10 hoge
[3,1,4,1,5]
2022-06-09 15:59:14.749050196
>>> length heaad

<interactive>:20:8: error:
    • Variable not in scope: heaad :: t0 a0
    • Perhaps you meant ‘head’ (imported from Prelude)
2022-06-09 16:00:59.138152464
>>> length hoge
5
2022-06-09 16:01:15.718672571
>>> length []
0
2022-06-09 16:01:26.876203915
>>> sum

<interactive>:23:1: error:
    • No instance for (Show ([Integer] -> Integer))
        arising from a use of ‘print’
        (maybe you haven't applied a function to enough arguments?)
    • In a stmt of an interactive GHCi command: print it
2022-06-09 16:01:36.957133166
>>> sum hoge
14
2022-06-09 16:02:21.440455909
>>> product hoge
60
2022-06-09 16:02:36.460803289
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
Ok, no modules loaded.
2022-06-09 16:07:33.551790669
>>> :load src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-09 16:07:33.607305717
>>> double 3+3
9
2022-06-09 16:07:50.116360922
>>> :quit
Leaving GHCi.
GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-06-16 15:01:29.768260613
>>> GHCi, version 9.0.2: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/mikoto/bprog2022/.ghci
2022-06-16 15:02:34.91631397
>>> take 3 [3,1,4,1,5]
[3,1,4]
2022-06-16 15:04:08.602957932
>>> :e src/First.hs
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
   5  
   6  quadruple :: Int -> Int
   7  quadruple x = double (double x)
Ok, no modules loaded.
2022-06-16 15:11:05.419613407
>>> :l src/First.hs
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:11:05.49715674
>>> double

<interactive>:4:1: error:
    • No instance for (Show (Int -> Int)) arising from a use of ‘print’
        (maybe you haven't applied a function to enough arguments?)
    • In a stmt of an interactive GHCi command: print it
2022-06-16 15:13:01.468240951
>>> take (double 2)[1,2,3,4]
[1,2,3,4]
2022-06-16 15:15:02.885088629
>>> [1 .. 10]
[1,2,3,4,5,6,7,8,9,10]
2022-06-16 15:20:12.31354806
>>> :e
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
   5  
   6  quadruple :: Int -> Int
   7  quadruple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:20:52.898302145
>>> factorial 3
6
2022-06-16 15:21:54.091795351
>>> factorial 4
24
2022-06-16 15:22:21.428816996
>>> .r

<interactive>:10:1: error: parse error on input ‘.’
2022-06-16 15:38:10.819398723
>>> .r

<interactive>:11:1: error: parse error on input ‘.’
2022-06-16 15:39:59.254518805
>>> :e
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
   5  
   6  quadruple :: Int -> Int
   7  quadruple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs) (length xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )
Ok, one module loaded.
2022-06-16 15:41:52.717216529
>>> :t take 3 [1,2,3,4,5]
take 3 [1,2,3,4,5] :: Num a => [a]
2022-06-16 15:49:41.78165073
>>> init [1 .. 5]
[1,2,3,4]
2022-06-16 16:06:54.829508745
>>> :e
   1  module First where
   2  
   3  double :: Int -> Int
   4  double x = x + x
   5  
   6  quadruple :: Int -> Int
   7  quadruple x = double (double x)
   8  
   9  factorial :: Integer -> Integer
  10  factorial n = product [1 .. n]
  11  
  12  average :: [Int] -> Int
  13  average xs = sum xs `div` length xs
  14  
  15  ave :: [Int] -> Int
  16  ave xs = div (sum xs) (length xs)
  17  
  18  myinit :: [a] -> [a]
  19  myinit [x]
  20  myinit (x:xs) = x : (init xs)
[1 of 1] Compiling First            ( src/First.hs, interpreted )

src/First.hs:19:1: error:
    Parse error: module header, import declaration
    or top-level declaration expected.
   |
19 | myinit [x]
   | ^^^^^^^^^^
Failed, no modules loaded.
2022-06-16 16:14:21.806083209
>>> myinit [1 .. 3]

<interactive>:16:1: error:
    • Variable not in scope: myinit :: [a0] -> t
    • Perhaps you meant ‘init’ (imported from Prelude)
2022-06-16 16:14:45.498741928
>>> :q
Leaving GHCi.
